#include<stdio.h>
int main()
{
    int n, i,j ;
    int burst[20],wt[20], tat[20],p[20], pr[20],total=0;
    float avrg = 0, avrgtt = 0;


    printf(" enter total num of process- ");
    scanf("%d", &n);


    printf("\nenter burst time & priority- \n");
    for (i = 0; i < n; i++)
    {
        printf("\n p[%d]\n", i+1);
        printf("enter burst time-");
        scanf("%d",&burst[i]);
        printf("enter priority-");
        scanf("%d",&pr[i]);
        p[i] = i+1;
    }


    // sort with priority
    for (i=0; i<n; i++)
    {
        int pos=i,temp;
        for (j = i+1; j<n; j++)
        {
            if(pr[j]<pr[pos])
                pos=j;
            {
                temp = pr[i];
                pr[i] = pr[pos];
                pr[pos] = temp;


                temp = burst[i];
                burst[i] = burst[pos];
                burst[pos] = temp;


                 temp = p[i];
                 p[i] = p[j];
                 p[j] = temp;
            }
        }
    }
     wt[0]=0;//watting
    for (i=1; i<n; i++)
    {
        wt[i]=0;
        for (j=0; j<i; j++)
            wt[i]+= burst[j];
            total+= wt[i];
    }
    avrg = (float)total/n;


    printf("\n process \t burst time \t waiting time \t turn time");


    for (i=0; i<n; i++) //turn cal
    {
        tat[i] = burst[i] + wt[i];
        total += tat[i];


        printf("\n p[%d] \t\t[%d] \t\t[%d] \t\t [%d]", p[i], burst[i], wt[i], tat[i]);
    }
    printf("\n\n avrg waiting time: %.2f", avrg);
return 0;
}